{"version":3,"sources":["webpack://redux-dynamic-modules-observable/webpack/universalModuleDefinition","webpack://redux-dynamic-modules-observable/webpack/bootstrap","webpack://redux-dynamic-modules-observable/./lib/Contracts.js","webpack://redux-dynamic-modules-observable/./lib/EpicManager.js","webpack://redux-dynamic-modules-observable/./lib/index.js","webpack://redux-dynamic-modules-observable/external \"redux-dynamic-modules-core\"","webpack://redux-dynamic-modules-observable/external \"redux-observable\"","webpack://redux-dynamic-modules-observable/external \"rxjs\"","webpack://redux-dynamic-modules-observable/external \"rxjs/operators\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb;;;;;;;;;;;;;ACDa;AACb;AACA;AACA,mCAAmC,mBAAO,CAAC,8DAA4B;AACvE,aAAa,mBAAO,CAAC,kBAAM;AAC3B,kBAAkB,mBAAO,CAAC,sCAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,+CAA+C,iCAAiC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iCAAiC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ga;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,0CAAkB;AACnD,oBAAoB,mBAAO,CAAC,2CAAe;AAC3C,aAAa,mBAAO,CAAC,uCAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA,wE;;;;;;;;;;;ACAA,8D;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,4D","file":"redux-dynamic-modules-observable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"redux-dynamic-modules-core\"), require(\"redux-observable\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"redux-dynamic-modules-core\", \"redux-observable\", \"rxjs\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"redux-dynamic-modules-observable\"] = factory(require(\"redux-dynamic-modules-core\"), require(\"redux-observable\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"redux-dynamic-modules-observable\"] = factory(root[\"redux-dynamic-modules-core\"], root[\"redux-observable\"], root[\"rxjs\"], root[\"rxjs/operators\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_redux_dynamic_modules_core__, __WEBPACK_EXTERNAL_MODULE_redux_observable__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/index.js\");\n","\"use strict\";\nexports.__esModule = true;\n","\"use strict\";\nexports.__esModule = true;\nexports.getEpicManager = void 0;\nvar redux_dynamic_modules_core_1 = require(\"redux-dynamic-modules-core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Creates an epic manager which manages epics being run in the system\n */\nfunction getEpicManager(epicMiddleware) {\n    var runningEpics = {};\n    // @ts-ignore\n    var epicRefCounter = redux_dynamic_modules_core_1.getObjectRefCounter();\n    return {\n        /**\n         * Dynamically add epics.\n         *\n         * We should consider these potential problem:\n         * * Epic could add repeatedly\n         * * Epic could as a dependency of two or more modules\n         * * Module hot load. React-hot-loader will rerender your react root\n         * component which means it will invoke all of your logic again. So this is\n         * minor worry.\n         */\n        add: function (epics) {\n            if (epics === void 0) { epics = []; }\n            epics.forEach(function (epic) {\n                var epicKey = epic.toString();\n                // Check if epic already exists\n                if (!runningEpics.hasOwnProperty(epicKey)) {\n                    var replaceableWrapper = createReplaceableWrapper();\n                    // we put replaceable Observable wrapper into epicMiddleware\n                    epicMiddleware.run(replaceableWrapper);\n                    // let's roll epic. Here we make epic run truly\n                    replaceableWrapper.replaceWith(epic);\n                    /**\n                     * We store the reference of replaceableWrapper, so we can check if it exists next time\n                     *\n                     * Is there a limit on length of the key (string) in JS object?\n                     * See https://stackoverflow.com/questions/13367391/is-there-a-limit-on-length-of-the-key-string-in-js-object\n                     */\n                    runningEpics[epicKey] = replaceableWrapper;\n                }\n                /**\n                 * We follow practice on official document https://redux-dynamic-modules.js.org/#/reference/ModuleCounting\n                 * So we use RefCounter to determine when we should remove epic\n                 */\n                epicRefCounter.add(epic);\n            });\n        },\n        /**\n         * Remove epics\n         * Actually it will replace the real epic with a empty epic\n         *\n         * __Note:__\n         * Under some circumstances here https://redux-observable.js.org/docs/recipes/AddingNewEpicsAsynchronously.html\n         * We can't do a actual replacement.\n         * But we can try to replace real epic with empty epic, it works as we expected. This benefit is given by rxjs switchMap\n         */\n        remove: function (epics) {\n            if (epics === void 0) { epics = []; }\n            epics.forEach(function (epic) {\n                epicRefCounter.remove(epic);\n                var epicKey = epic.toString();\n                var replaceableWrapper = runningEpics[epicKey];\n                // Check if no module reference epic, we will remove epic\n                if (replaceableWrapper && !epicRefCounter.getCount(epic)) {\n                    // Replace the epic with empty epic, so no more unnecessary logic can cause any side effects.\n                    replaceableWrapper.replaceWith(emptyEpic);\n                    // Delete unnecessary replaceableWrapper reference\n                    delete runningEpics[epicKey];\n                }\n            });\n        },\n        dispose: function () {\n            runningEpics = null;\n            epicRefCounter = undefined;\n        }\n    };\n}\nexports.getEpicManager = getEpicManager;\n/**\n * create a wrapper which can be replace by a real epic.\n * And we can also use this wrapper along with {@link emptyEpic} to remove real epic logic\n */\nfunction createReplaceableWrapper() {\n    var epic$ = new rxjs_1.Subject();\n    // Wrap epic$ as a replaceable Observable\n    var replaceableWrapper = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return epic$.pipe(\n        // @ts-ignore\n        operators_1.switchMap(function (epic) { return epic.apply(void 0, args); }));\n    };\n    // Expose a method. The wrapper can be replaced by real epic, and make it run\n    replaceableWrapper.replaceWith = function (epic) {\n        epic$.next(epic);\n        replaceableWrapper._epic = epic;\n    };\n    replaceableWrapper.epicRef = function () { return replaceableWrapper._epic; };\n    return replaceableWrapper;\n}\n/**\n * Empty epic\n * This epic do nothing and we need it to be used for real epic replacement\n */\nfunction emptyEpic(action$) {\n    return action$.pipe(operators_1.ignoreElements());\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\nexports.getObservableExtension = void 0;\nvar redux_observable_1 = require(\"redux-observable\");\nvar EpicManager_1 = require(\"./EpicManager\");\n__exportStar(require(\"./Contracts\"), exports);\nfunction getObservableExtension() {\n    var epicMiddleware = redux_observable_1.createEpicMiddleware();\n    var epicManager = EpicManager_1.getEpicManager(epicMiddleware);\n    return {\n        middleware: [epicMiddleware],\n        onModuleAdded: function (module) {\n            if (module.epics) {\n                epicManager.add(module.epics);\n            }\n        },\n        onModuleRemoved: function (module) {\n            if (module.epics) {\n                epicManager.remove(module.epics);\n            }\n        },\n        dispose: function () {\n            epicManager.dispose();\n        }\n    };\n}\nexports.getObservableExtension = getObservableExtension;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_redux_dynamic_modules_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_redux_observable__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;"],"sourceRoot":""}